#!/bin/bash

basedir=$(dirname $0)

# Function to check if running in Docker
is_docker() {
    # Check for Docker container indicators
    if [ -f /.dockerenv ]; then
        return 0
    fi
    
    # Check cgroup for docker
    if grep -q docker /proc/1/cgroup 2>/dev/null; then
        return 0
    fi
    
    # Check if running as PID 1 (common in containers)
    if [ "$$" = "1" ]; then
        return 0
    fi
    
    return 1
}

# Function to check if GUI is available
has_gui() {
    # Check if DISPLAY is set
    if [ -n "$DISPLAY" ]; then
        return 0
    fi
    
    # Check if we're in a desktop environment
    if [ -n "$XDG_CURRENT_DESKTOP" ] || [ -n "$DESKTOP_SESSION" ]; then
        return 0
    fi
    
    return 1
}

# Determine environment
IN_DOCKER=false
HAS_GUI=false

if is_docker; then
    IN_DOCKER=true
    echo "🐳 Docker environment detected"
else
    echo "🖥️  Native environment detected"
fi

if has_gui; then
    HAS_GUI=true
    echo "🖼️  GUI environment available"
else
    echo "📝 Headless environment detected"
fi

# Install base packages
echo "📦 Installing base packages..."
sudo apt update
sudo apt install -y postgresql openjdk-17-jdk bzip2 unzip php-cli php-pgsql php-sqlite3 sqlite3 php-dev build-essential composer linux-tools-common

# Install GUI-related packages only if GUI is available
if [ "$HAS_GUI" = true ]; then
    echo "🎨 Installing GUI packages..."
    sudo apt install -y libswt-gtk-4-java
else
    echo "⏭️  Skipping GUI packages (no GUI environment)"
fi

# Install PHP extensions
echo "🔧 Installing PHP extensions..."
sudo pecl install msgpack
sudo pecl install protobuf

echo "extension=msgpack.so" | sudo tee /etc/php/8.3/mods-available/msgpack.ini
echo "extension=msgpack.so" | sudo tee /etc/php/8.3/cli/conf.d/20-msgpack.ini

echo "extension=protobuf.so" | sudo tee /etc/php/8.3/mods-available/protobuf.ini
echo "extension=protobuf.so" | sudo tee /etc/php/8.3/cli/conf.d/20-protobuf.ini

# Create bin directory
cd $basedir
mkdir -p bin
cd $basedir/bin

# Install protoc (always needed)
echo "🔨 Installing Protocol Buffer compiler..."
if [ ! -d "protoc" ]; then
    mkdir protoc
    cd protoc
    wget https://github.com/protocolbuffers/protobuf/releases/download/v31.1/protoc-31.1-linux-x86_64.zip
    unzip protoc-31.1-linux-x86_64.zip
    rm protoc-31.1-linux-x86_64.zip
    cd ..
    echo "✅ Protocol Buffer compiler installed"
else
    echo "✅ Protocol Buffer compiler already exists"
fi

# Install Apache Hop (only if GUI is available or user forces it)
if [ "$HAS_GUI" = true ] || [ "$IN_DOCKER" = false ]; then
    read -p "🔄 Apakah Akan menghapus dan Menginstall Ulang Apache Hop ? (ketik ya jika ingin melakukan) " keputusan
    
    if [ "$keputusan" = "ya" ]; then
        echo "📥 Installing Apache Hop..."
        rm -rf hop
        wget https://dlcdn.apache.org/hop/2.14.0/apache-hop-client-2.14.0.zip
        unzip apache-hop-client-2.14.0.zip
        rm apache-hop-client-2.14.0.zip
        echo "✅ Apache Hop installed"
    fi
else
    echo "⏭️  Skipping Apache Hop installation (GUI application, Docker environment detected)"
fi

keputusan="tidak"

# Install DBeaver (only if GUI is available)
if [ "$HAS_GUI" = true ] && [ "$IN_DOCKER" = false ]; then
    read -p "🔄 Apakah Akan Menghapus dan Menginstall Ulang DBeaver ? (ketik ya jika ingin melakukan) " keputusan
    
    if [ "$keputusan" = "ya" ]; then
        echo "📥 Installing DBeaver..."
        rm -rf dbeaver
        wget https://dbeaver.io/files/dbeaver-ce-latest-linux.gtk.x86_64.tar.gz
        tar xvf dbeaver-ce-latest-linux.gtk.x86_64.tar.gz
        rm dbeaver-ce-latest-linux.gtk.x86_64.tar.gz
        echo "✅ DBeaver installed"
    fi
else
    echo "⏭️  Skipping DBeaver installation (GUI application, not suitable for current environment)"
fi

echo ""
echo "🎉 Installation completed!"
echo ""
echo "📋 Summary:"
echo "   Environment: $([ "$IN_DOCKER" = true ] && echo "Docker" || echo "Native")"
echo "   GUI Support: $([ "$HAS_GUI" = true ] && echo "Available" || echo "Not Available")"
echo "   PostgreSQL: ✅ Installed"
echo "   Java 17: ✅ Installed"
echo "   PHP Extensions: ✅ Installed"
echo "   Protocol Buffers: ✅ Installed"
echo "   Apache Hop: $([ -d "hop" ] && echo "✅ Installed" || echo "⏭️  Skipped")"
echo "   DBeaver: $([ -d "dbeaver" ] && echo "✅ Installed" || echo "⏭️  Skipped")"